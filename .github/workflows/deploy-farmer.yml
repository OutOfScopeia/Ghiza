name: Deploy App With Farmer Script (OIDC)

on:
  workflow_run:
    workflows: ["Build and Push to ACR (OIDC)"]
    types:
      - completed
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  HASH: ${{ github.sha }}
  TAG: ${{ github.ref_name }}-${{ github.sha }}
  
jobs:
  deploy-test:
    runs-on: ubuntu-latest
    if: (github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch != 'master') || (github.event.workflow_run.event == 'workflow_run' && github.event.workflow_run.head_branch != 'master' && github.event.workflow_run.conclusion == 'success')
    environment:
      name: TEST
    env:
      ENVIRONMENT: TEST
      ACR_NAME: ${{ vars.ACR_NAME }}
      ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
      WORKSPACE_ID: ${{ vars.WORKSPACE_ID }}
      X_BEARER_TOKEN: ${{ secrets.X_BEARER_TOKEN }}
      GHIZA_TENANT_ID: ${{ fromJson(secrets.GHIZA_CREDENTIALS).tenant }}
      GHIZA_CLIENT_ID: ${{ fromJson(secrets.GHIZA_CREDENTIALS).appId }}
      GHIZA_CLIENT_SECRET: ${{ fromJson(secrets.GHIZA_CREDENTIALS).password }}
      BLUESKY_AT_IDENTIFIER: ${{ vars.BLUESKY_AT_IDENTIFIER }}
      X_HANDLE: ${{ vars.X_HANDLE }}
      CRON_CREATED_SERVICE_PRINCIPALS: ${{ vars.CRON_CREATED_SERVICE_PRINCIPALS }}
      CRON_REPLIES_REPORT_BLUESKY: ${{ vars.CRON_REPLIES_REPORT_BLUESKY }}
      CRON_REPLIES_REPORT_X: ${{ vars.CRON_REPLIES_REPORT_X }}
      CRON_SIGNINS: ${{ vars.CRON_SIGNINS }}
      CRON_STALE_SERVICE_PRINCIPALS: ${{ vars.CRON_STALE_SERVICE_PRINCIPALS }}
      LOOKBACK_MINUTES_SIGNINS: ${{ vars.LOOKBACK_MINUTES_SIGNINS }}
      LOOKBACK_MINUTES_SPCREATIONS: ${{ vars.LOOKBACK_MINUTES_SPCREATIONS }}
      SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK: ${{ vars.SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK }}
      SLACK_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.SLACK_SOCIALS_CHANNEL_WEBHOOK }}
      TEAMS_MONITORING_CHANNEL_WEBHOOK: ${{ vars.TEAMS_MONITORING_CHANNEL_WEBHOOK }}
      TEAMS_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.TEAMS_SOCIALS_CHANNEL_WEBHOOK }}
    steps:
    - name: Dump all environment variables
      run: env

    - name: Dump some more vars
      run: echo ${{ github.event.workflow_run.head_branch }}

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Verify .NET installation
      run: dotnet --info

    - name: Login to Azure using OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).appId }}
        tenant-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenant }}
        subscription-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}

    - name: "Deploy Azure Resources with Farmer script"
      run: dotnet fsi deploy.fsx

  deploy-live:
    runs-on: ubuntu-latest
    if: (github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'master') || (github.event.workflow_run.event == 'workflow_run' && github.event.workflow_run.head_branch == 'master' && github.event.workflow_run.conclusion == 'success')
    environment:
      name: LIVE
    env:
      ENVIRONMENT: LIVE
      ACR_NAME: ${{ vars.ACR_NAME }}
      ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
      WORKSPACE_ID: ${{ vars.WORKSPACE_ID }}
      X_BEARER_TOKEN: ${{ secrets.X_BEARER_TOKEN }}
      GHIZA_TENANT_ID: ${{ fromJson(secrets.GHIZA_CREDENTIALS).tenant }}
      GHIZA_CLIENT_ID: ${{ fromJson(secrets.GHIZA_CREDENTIALS).appId }}
      GHIZA_CLIENT_SECRET: ${{ fromJson(secrets.GHIZA_CREDENTIALS).password }}
      BLUESKY_AT_IDENTIFIER: ${{ vars.BLUESKY_AT_IDENTIFIER }}
      X_HANDLE: ${{ vars.X_HANDLE }}
      CRON_CREATED_SERVICE_PRINCIPALS: ${{ vars.CRON_CREATED_SERVICE_PRINCIPALS }}
      CRON_REPLIES_REPORT_BLUESKY: ${{ vars.CRON_REPLIES_REPORT_BLUESKY }}
      CRON_REPLIES_REPORT_X: ${{ vars.CRON_REPLIES_REPORT_X }}
      CRON_SIGNINS: ${{ vars.CRON_SIGNINS }}
      CRON_STALE_SERVICE_PRINCIPALS: ${{ vars.CRON_STALE_SERVICE_PRINCIPALS }}
      LOOKBACK_MINUTES_SIGNINS: ${{ vars.LOOKBACK_MINUTES_SIGNINS }}
      LOOKBACK_MINUTES_SPCREATIONS: ${{ vars.LOOKBACK_MINUTES_SPCREATIONS }}
      SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK: ${{ vars.SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK }}
      SLACK_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.SLACK_SOCIALS_CHANNEL_WEBHOOK }}
      TEAMS_MONITORING_CHANNEL_WEBHOOK: ${{ vars.TEAMS_MONITORING_CHANNEL_WEBHOOK }}
      TEAMS_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.TEAMS_SOCIALS_CHANNEL_WEBHOOK }}
    steps:
    - name: Dump all environment variables
      run: env

    - name: Dump some more vars
      run: echo ${{ github.event.workflow_run.head_branch }}

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Verify .NET installation
      run: dotnet --info

    - name: Login to Azure using OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).appId }}
        tenant-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenant }}
        subscription-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}

    - name: "Deploy Azure Resources with Farmer script"
      run: dotnet fsi deploy.fsx

