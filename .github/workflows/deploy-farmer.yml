name: Deploy App With Farmer Script (OIDC)

on:
  push:
    branches:
      - dev
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and Deploy to Azure Container Apps"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

env:
  BRANCHA: ${{ github.ref_name }}
  HASH: ${{ github.sha }}
  TAG: ${{ github.ref_name }}-${{ github.sha }}
  
jobs:
  deploy-test:
    runs-on: ubuntu-latest
    environment:
      name: TEST
    env:
      CRON_CREATED_SERVICE_PRINCIPALS: ${{ vars.CRON_CREATED_SERVICE_PRINCIPALS }}
      CRON_REPLIES_REPORT_BLUESKY: ${{ vars.CRON_REPLIES_REPORT_BLUESKY }}
      CRON_REPLIES_REPORT_X: ${{ vars.CRON_REPLIES_REPORT_X }}
      CRON_SIGNINS: ${{ vars.CRON_SIGNINS }}
      CRON_STALE_SERVICE_PRINCIPALS: ${{ vars.CRON_STALE_SERVICE_PRINCIPALS }}
      LOOKBACK_MINUTES_SIGNINS: ${{ vars.LOOKBACK_MINUTES_SIGNINS }}
      LOOKBACK_MINUTES_SPCREATIONS: ${{ vars.LOOKBACK_MINUTES_SPCREATIONS }}
      SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK: ${{ vars.SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK }}
      SLACK_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.SLACK_SOCIALS_CHANNEL_WEBHOOK }}
      TEAMS_MONITORING_CHANNEL_WEBHOOK: ${{ vars.TEAMS_MONITORING_CHANNEL_WEBHOOK }}
      TEAMS_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.TEAMS_SOCIALS_CHANNEL_WEBHOOK }}
    steps:
    - name: Dump all environment variables
      run: env

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Verify .NET installation
      run: dotnet --info

    - name: Log in to Azure
      uses: azure/login@v2.3.0
      with:
        client-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        tenant-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        subscription-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}

    - name: "Deploy Azure Resources with Farmer script"
      run: dotnet fsi deploy.fsx

  deploy-live:
    needs: [deploy-test]
    runs-on: ubuntu-latest
    environment:
      name: LIVE
    env:
      CRON_CREATED_SERVICE_PRINCIPALS: ${{ vars.CRON_CREATED_SERVICE_PRINCIPALS }}
      CRON_REPLIES_REPORT_BLUESKY: ${{ vars.CRON_REPLIES_REPORT_BLUESKY }}
      CRON_REPLIES_REPORT_X: ${{ vars.CRON_REPLIES_REPORT_X }}
      CRON_SIGNINS: ${{ vars.CRON_SIGNINS }}
      CRON_STALE_SERVICE_PRINCIPALS: ${{ vars.CRON_STALE_SERVICE_PRINCIPALS }}
      LOOKBACK_MINUTES_SIGNINS: ${{ vars.LOOKBACK_MINUTES_SIGNINS }}
      LOOKBACK_MINUTES_SPCREATIONS: ${{ vars.LOOKBACK_MINUTES_SPCREATIONS }}
      SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK: ${{ vars.SLACK_AZURE_ALERTS_CHANNEL_WEBHOOK }}
      SLACK_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.SLACK_SOCIALS_CHANNEL_WEBHOOK }}
      TEAMS_MONITORING_CHANNEL_WEBHOOK: ${{ vars.TEAMS_MONITORING_CHANNEL_WEBHOOK }}
      TEAMS_SOCIALS_CHANNEL_WEBHOOK: ${{ vars.TEAMS_SOCIALS_CHANNEL_WEBHOOK }}
    steps:
    - name: Dump all environment variables
      run: env

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Verify .NET installation
      run: dotnet --info

    - name: Log in to Azure
      uses: azure/login@v2.3.0
      with:
        client-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
        tenant-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
        subscription-id: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}

    - name: "Deploy Azure Resources with Farmer script"
      run: dotnet fsi deploy.fsx

